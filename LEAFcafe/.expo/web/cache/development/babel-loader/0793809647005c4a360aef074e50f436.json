{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Mobile\\\\LEAFcafe\\\\navigation\\\\tabs.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createBottomTabNavigator, BottomTabBar } from \"@react-navigation/bottom-tabs\";\nimport Svg, { Path } from 'react-native-svg';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport { Home } from \"../screens\";\nimport { Login } from \"../screens\";\nimport { COLORS, icons } from \"../constants\";\nvar Tab = createBottomTabNavigator();\n\nvar TabBarCustomButton = function TabBarCustomButton(_ref) {\n  var accessibilityState = _ref.accessibilityState,\n      children = _ref.children,\n      onPress = _ref.onPress;\n  var isSelected = accessibilityState.selected;\n\n  if (isSelected) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        position: 'absolute',\n        top: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), React.createElement(Svg, {\n      width: 75,\n      height: 61,\n      viewBox: \"0 0 75 61\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, React.createElement(Path, {\n      d: \"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\",\n      fill: COLORS.white,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        top: -22.5,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: COLORS.white\n      },\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, children));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        flex: 1,\n        height: 60,\n        backgroundColor: COLORS.white\n      },\n      activeOpacity: 1,\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, children);\n  }\n};\n\nvar CustomTabBar = function CustomTabBar(props) {\n  if (isIphoneX()) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: 30,\n        backgroundColor: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), React.createElement(BottomTabBar, _extends({}, props.props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    return React.createElement(BottomTabBar, _extends({}, props.props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }));\n  }\n};\n\nvar Tabs = function Tabs() {\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        position: 'absolute',\n        left: 0,\n        bottom: 0,\n        right: 0,\n        borderTopWidth: 0,\n        backgroundColor: \"transparent\",\n        elevation: 0\n      }\n    },\n    tabBar: function tabBar(props) {\n      return React.createElement(CustomTabBar, {\n        props: props,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(Image, {\n          source: icons.cutlery,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? COLORS.primary : COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(Image, {\n          source: icons.search,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? COLORS.primary : COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Like\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(Image, {\n          source: icons.like,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? COLORS.primary : COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"User\",\n    component: Login,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(Image, {\n          source: icons.user,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? COLORS.primary : COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Tabs;","map":{"version":3,"sources":["D:/Mobile/LEAFcafe/navigation/tabs.js"],"names":["React","createBottomTabNavigator","BottomTabBar","Svg","Path","isIphoneX","Home","Login","COLORS","icons","Tab","TabBarCustomButton","accessibilityState","children","onPress","isSelected","selected","flex","alignItems","flexDirection","position","top","backgroundColor","white","justifyContent","width","height","borderRadius","CustomTabBar","props","bottom","left","right","Tabs","showLabel","style","borderTopWidth","elevation","tabBarIcon","focused","cutlery","tintColor","primary","secondary","tabBarButton","search","like","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Image,\n    TouchableOpacity\n} from 'react-native';\nimport { createBottomTabNavigator, BottomTabBar } from \"@react-navigation/bottom-tabs\"\nimport Svg, { Path } from 'react-native-svg';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\n\nimport { Home } from \"../screens\"\n\nimport { Login } from \"../screens\"\n\nimport { COLORS, icons } from \"../constants\"\n\nconst Tab = createBottomTabNavigator();\n\nconst TabBarCustomButton = ({ accessibilityState, children, onPress }) => {\n\n    var isSelected = accessibilityState.selected\n\n    if (isSelected) {\n        return (\n            <View style={{ flex: 1, alignItems: \"center\" }}>\n                <View style={{ flexDirection: 'row', position: 'absolute', top: 0 }}>\n                    <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n                    <Svg\n                        width={75}\n                        height={61}\n                        viewBox=\"0 0 75 61\"\n                    >\n                        <Path\n                            d=\"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\"\n                            fill={COLORS.white}\n                        />\n                    </Svg>\n                    <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n                </View>\n\n                <TouchableOpacity\n                    style={{\n                        top: -22.5,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        width: 50,\n                        height: 50,\n                        borderRadius: 25,\n                        backgroundColor: COLORS.white\n                    }}\n                    onPress={onPress}\n                >\n                    {children}\n                </TouchableOpacity>\n            </View>\n        )\n    } else {\n        return (\n            <TouchableOpacity\n                style={{\n                    flex: 1,\n                    height: 60,\n                    backgroundColor: COLORS.white\n                }}\n                activeOpacity={1}\n                onPress={onPress}\n            >\n                {children}\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst CustomTabBar = (props) => {\n    if (isIphoneX()) {\n        return (\n            <View>\n                <View\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        height: 30,\n                        backgroundColor: COLORS.white\n                    }}\n                ></View>\n                <BottomTabBar\n                    {...props.props}\n                />\n            </View>\n        )\n    } else {\n        return (\n            <BottomTabBar\n                {...props.props}\n            />\n        )\n    }\n\n}\n\nconst Tabs = () => {\n    return (\n        <Tab.Navigator\n            tabBarOptions={{\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    borderTopWidth: 0,\n                    backgroundColor: \"transparent\",\n                    elevation: 0\n                }\n            }}\n            tabBar={(props) => (\n                <CustomTabBar\n                    props={props}\n                />\n            )}\n        >\n            <Tab.Screen\n                name=\"Home\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.cutlery}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"Search\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.search}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"Like\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.like}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"User\"\n                component={ Login }\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.user}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n        </Tab.Navigator>\n    )\n}\n\nexport default Tabs"]},"metadata":{},"sourceType":"module"}